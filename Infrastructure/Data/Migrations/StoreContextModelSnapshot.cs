// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("DishProduct", b =>
                {
                    b.Property<int>("DishesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DishesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("DishProduct");

                    b.HasData(
                        new
                        {
                            DishesId = 1,
                            ProductsId = 1
                        },
                        new
                        {
                            DishesId = 2,
                            ProductsId = 2
                        },
                        new
                        {
                            DishesId = 3,
                            ProductsId = 1
                        },
                        new
                        {
                            DishesId = 3,
                            ProductsId = 2
                        },
                        new
                        {
                            DishesId = 3,
                            ProductsId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Some dish 0",
                            Name = "Sombrero",
                            PictureUrl = "zzz",
                            Price = 20.50m,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Some dish 1",
                            Name = "Mustangi",
                            PictureUrl = "xxx",
                            Price = 73.0m,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Some dish 2",
                            Name = "Eleonore",
                            PictureUrl = "ccc",
                            Price = 2.0m,
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.DishType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DishTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Soup"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Desert"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cold Snap"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hot Snap"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Special"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fish",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Milk",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Beef",
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Meat"
                        });
                });

            modelBuilder.Entity("DishProduct", b =>
                {
                    b.HasOne("Domain.Entities.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Dish", b =>
                {
                    b.HasOne("Domain.Entities.DishType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.ProductType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
